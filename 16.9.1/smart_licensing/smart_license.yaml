# Copyright (c) 2018, Cisco and/or its affiliates
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# This ansible playbook verfies if base requirements for SL is met, then configures and verfies the SL registration status


- name: verify and configure smart license on Catalyst 9000 Series switches
  hosts: c9k
  gather_facts: yes

  tasks:
    - name: collect hardware facts
      ios_facts:
        gather_subset: hardware

    - set_fact:
        sw_version: '{{ ansible_net_version | regex_findall("(\d+)\.(\d+)\..*") }}'

    - fail:
        msg: "Minimum sw version should be 16.09"
      when: (sw_version[0][0] != "16" or sw_version[0][1] != "09")

    - name: Test reachability to CSSM server 
      ios_ping:
        dest: cisco.com
        count: 2

    - name: run show license summary
      ios_command:
        commands: show license summary 
      register: output

    - name: verify smart license status
      command: python verify_sl.py --out {{output['stdout']| to_yaml }}
      register: sl_stat

    - fail: 
        msg: "Smart license already configured. Exiting."
      when: sl_stat['stdout'] == "True"

    - set_fact:
        token:  "{{lookup('file', '/etc/token.txt') }}"

    - name: configure smart token
      ios_command:
        commands: license smart register idtoken {{ token }} 

    - pause:
        seconds: 45

    - name: run show license summary
      ios_command:
        commands: show license summary 
      register: output_post_conf


    - name: verify smart license status after configuration 
      command: python verify_sl.py --out {{output_post_conf['stdout']| to_yaml }}
      register: sl_stat_post_conf

    - fail: 
        msg: "Smart license still not configured! Playbook failed"
      when: sl_stat_post_conf['stdout'] == "False"




